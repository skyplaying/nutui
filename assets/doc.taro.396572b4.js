import{c as t,o as n,C as o}from"./vendor.ed841bd5.js";const e={class:"markdown-body"},d=o('<h1>Dialog 对话框</h1><h3>介绍</h3><p>模态对话框，在浮层中显示，引导用户进行相关操作，常用于消息提示、消息确认，或在当前页面内完成特定的交互操作。</p><h3>安装</h3><pre><code class="language-javascript">import { createApp } from &#39;vue&#39;;\nimport { Dialog } from &#39;@nutui/nutui@taro&#39;;\n\nconst app = createApp();\napp.use(Dialog);\n</code></pre><h2>使用方式</h2><pre><code class="language-html">&lt;nut-cell title=&quot;基础弹框&quot; @click=&quot;baseClick&quot;&gt;&lt;/nut-cell&gt;\n&lt;nut-dialog title=&quot;基础弹框&quot; content=&quot;这是基础弹框。&quot; v-model:visible=&quot;visible1&quot; @cancel=&quot;onCancel&quot; @ok=&quot;onOk&quot; /&gt;\n\n&lt;nut-cell title=&quot;无标题弹框&quot; @click=&quot;noTitleClick&quot;&gt;&lt;/nut-cell&gt;\n&lt;nut-dialog content=&quot;这是无标题弹框。&quot; v-model:visible=&quot;visible2&quot; @cancel=&quot;onCancel&quot; @ok=&quot;onOk&quot; /&gt;\n\n&lt;nut-cell title=&quot;提示弹框&quot; @click=&quot;tipsClick&quot;&gt;&lt;/nut-cell&gt;\n&lt;nut-dialog no-cancel-btn title=&quot;温馨提示&quot; content=&quot;这是提示弹框。&quot; v-model:visible=&quot;visible3&quot; @cancel=&quot;onCancel&quot; @ok=&quot;onOk&quot; /&gt;\n\n&lt;nut-cell title=&quot;异步关闭&quot; @click=&quot;componentClick&quot;&gt;&lt;/nut-cell&gt;\n&lt;nut-dialog title=&quot;异步关闭&quot; :content=&quot;closeContent&quot; :visible=&quot;visible4&quot; @cancel=&quot;onCancel&quot; @ok=&quot;onOkAsync&quot; /&gt;\n</code></pre><pre><code class="language-javascript">import { ref } from &#39;vue&#39;;\nexport default {\n  setup() {\n    const visible1 = ref(false);\n    const visible2 = ref(false);\n    const visible3 = ref(false);\n    const visible4 = ref(false);\n    const closeContent = ref(&#39;&#39;);\n    const sleep = () =&gt; new Promise((resolve) =&gt; setTimeout(resolve, 1000));\n    const countDown = (second: number) =&gt; `倒计时 ${second} 秒`;\n\n    const onCancel = () =&gt; {\n      console.log(&#39;event cancel&#39;);\n    };\n    const onOk = () =&gt; {\n      console.log(&#39;event ok&#39;);\n    };\n    const onOkAsync = () =&gt; {\n      sleep()\n        .then(() =&gt; {\n          closeContent.value = countDown(2);\n          return sleep();\n        })\n        .then(() =&gt; {\n          closeContent.value = countDown(1);\n          return sleep();\n        })\n        .then(() =&gt; {\n          closeContent.value = countDown(0);\n        })\n        .then(() =&gt; {\n          visible4.value = false;\n        });\n    };\n\n    const baseClick = (): void =&gt; {\n      visible1.value = true;\n    };\n    const noTitleClick = () =&gt; {\n      visible2.value = true;\n    };\n    const tipsClick = () =&gt; {\n      visible3.value = true;\n    };\n\n    const componentClick = () =&gt; {\n      closeContent.value = `点击确定时3s后关闭`;\n      visible4.value = true;\n    };\n\n    return {\n      visible1,\n      visible2,\n      visible3,\n      visible4,\n      onCancel,\n      onOk,\n      closeContent,\n      onOkAsync,\n      baseClick,\n      noTitleClick,\n      componentClick,\n      tipsClick\n    };\n  }\n};\n</code></pre><h2>Props</h2><table><thead><tr><th>字段</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td>String</td><td>-</td></tr><tr><td>content</td><td>内容，支持HTML</td><td>String</td><td>-</td></tr><tr><td>teleport</td><td>指定挂载节点</td><td>String</td><td>“body”</td></tr><tr><td>close-on-click-overlay</td><td>点击蒙层是否关闭对话框</td><td>Boolean</td><td>false</td></tr><tr><td>no-footer</td><td>是否隐藏底部按钮栏</td><td>Boolean</td><td>false</td></tr><tr><td>no-ok-btn</td><td>是否隐藏确定按钮</td><td>Boolean</td><td>false</td></tr><tr><td>no-cancel-btn</td><td>是否隐藏取消按钮</td><td>Boolean</td><td>false</td></tr><tr><td>cancel-text</td><td>取消按钮文案</td><td>String</td><td>”取消“</td></tr><tr><td>ok-text</td><td>确定按钮文案</td><td>String</td><td>”确 定“</td></tr><tr><td>ok-btn-disabled</td><td>禁用确定按钮</td><td>Boolean</td><td>false</td></tr><tr><td>cancel-auto-close</td><td>取消按钮是否默认关闭弹窗</td><td>Boolean</td><td>true</td></tr><tr><td>text-align</td><td>文字对齐方向，可选值同css的text-align</td><td>String</td><td>“center”</td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td>Boolean</td><td>false</td></tr><tr><td>lock-scroll</td><td>背景是否锁定</td><td>Boolean</td><td>false</td></tr></tbody></table><h2>Events</h2><table><thead><tr><th>字段</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>ok</td><td>确定按钮回调</td><td>Function</td><td>-</td></tr><tr><td>cancel</td><td>取消按钮回调</td><td>Function</td><td>-</td></tr><tr><td>closed</td><td>关闭回调，任何情况关闭弹窗都会触发</td><td>Function</td><td>-</td></tr></tbody></table><h2>Slots</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>header</td><td>自定义标题区域</td></tr><tr><td>default</td><td>自定义内容</td></tr><tr><td>footer</td><td>自定义底部按钮区域</td></tr></tbody></table>',14),l={expose:[],setup:o=>(o,l)=>(n(),t("div",e,[d]))};export default l;
